name: Bump `jenkinsciinfra/packaging` and/or `jenkins/inbound-agent` Docker images

scms:
  default:
    kind: github
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      owner: "{{ .github.owner }}"
      repository: "{{ .github.repository }}"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      branch: "{{ .github.branch }}"

sources:
  lastDockerPackagingVersion:
    name: Get the last jenkinsciinfra/packaging Docker image version
    kind: githubrelease
    spec:
      owner: "jenkins-infra"
      repository: "docker-packaging"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      versionfilter:
        kind: semver
    transformers:
      - trimprefix: 'v'
  getWindowsInboundAgentSuffix:
    name: Get the current Windows agent container name suffix
    kind: yaml
    spec:
      file: PodTemplates.d/package-windows.yaml
      key: $.spec.containers[0].image
    transformers:
      - findsubmatch:
          pattern: 'jenkins/inbound-agent:(.*)\.([^-]*)-([^-]*)-(.*)'
          captureindex: 4
  remotingVersion:
    name: Remoting version in Docker Packaging
    kind: file
    dependson:
      - lastDockerPackagingVersion
      - getWindowsInboundAgentSuffix
    spec:
      file: https://raw.githubusercontent.com/jenkins-infra/docker-packaging/refs/tags/{{ source "lastDockerPackagingVersion" }}/Dockerfile
      matchpattern: '\AARG JENKINS_AGENT_VERSION=(.*)'
    transformers:
      - trimprefix: ARG JENKINS_AGENT_VERSION=
      - addsuffix: '-{{ source "getWindowsInboundAgentSuffix" }}'

conditions:
  testDockerPackagingImagePublished:
    name: "Does the Docker image jenkinsciinfra/packaging with the last discovered tag is published?"
    kind: dockerimage
    sourceid: lastDockerPackagingVersion
    spec:
      image: jenkinsciinfra/packaging
      ## tag come from the input source

  testDockerInboundAgentImagePublished:
    name: "Has the Docker image jenkins/inbound-agent (with the last discovered tag) been published?"
    kind: dockerimage
    sourceid: remotingVersion
    spec:
      image: jenkins/inbound-agent
      ## tag come from the input source

targets:
  updateJNLPContainerForPackagingPod:
    name: "Update the image of the jnlp container of the pod template manifest for package job"
    sourceid: lastDockerPackagingVersion
    transformers:
      - addprefix: "jenkinsciinfra/packaging:"
    kind: yaml
    spec:
      file: PodTemplates.d/package-linux.yaml
      key: $.spec.containers[0].image
    scmid: default
  updateJNLPContainerForReleasePod:
    name: "Update the image of the jnlp container of the pod template manifest for release job"
    sourceid: lastDockerPackagingVersion
    transformers:
      - addprefix: "jenkinsciinfra/packaging:"
    kind: yaml
    spec:
      file: PodTemplates.d/release-linux.yaml
      key: $.spec.containers[0].image
    scmid: default
  updateInboundAgentVersion:
    name: "Update jenkins/inbound agent version in package-windows.yaml"
    kind: yaml
    transformers:
      - addprefix: 'jenkins/inbound-agent:'
    spec:
      file: PodTemplates.d/package-windows.yaml
      key: $.spec.containers[0].image
    sourceid: remotingVersion
    scmid: default

actions:
  default:
    kind: github/pullrequest
    scmid: default
    title: Bump `jenkinsciinfra/packaging` and/or `jenkins/inbound-agent` Docker images
    spec:
      labels:
        - dependencies
        - jenkinsciinfra/packaging
        - jenkins/inbound-agent
